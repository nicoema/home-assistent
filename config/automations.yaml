- id: '1641123332693'
  alias: Nico comes home
  description: ''
  trigger:
  - platform: state
    entity_id: person.nico
    from: not home
    to: home
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition: []
  action:
  - service: script.i_am_home
  mode: single
- id: '1641222598916'
  alias: Aurora Warning Home
  description: Warning for bad Discs whit tts and mess.
  trigger:
  - platform: state
    entity_id: sensor.aurora_status
    from: normal
    id: Disk 1
  - platform: state
    entity_id: sensor.aurora_status_2
    from: normal
    id: Disk 2
  - platform: state
    entity_id: sensor.aurora_status_3
    from: normal
    id: Disk 3
  - platform: state
    entity_id: sensor.aurora_status_4
    from: normal
    id: Disk 4
  - platform: state
    entity_id: sensor.aurora_status_5
    from: normal
    id: Unit
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Disk 1
      - condition: state
        entity_id: person.nico
        state: home
      sequence:
      - service: notify.alexa_media
        data:
          message: Warning. Something is Wrong whit Auroras Discs 1
          data:
            type: tts
          target: '{{ states(''input_text.echo_sensor'') }}'
      - service: notify.mobile_app_nicos_iphone
        data:
          message: Warning. Something is Wrong whit Auroras Discs 1
          title: '- WARNING -'
    - conditions:
      - condition: trigger
        id: Disk 1
      sequence:
      - service: notify.mobile_app_nicos_iphone
        data:
          message: Warning . Something is Wrong whit Auroras Discs 1
          title: '- WARNING -'
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.yellow_alert
    - conditions:
      - condition: trigger
        id: Disk 2
      - condition: state
        entity_id: person.nico
        state: home
      sequence:
      - service: notify.alexa_media
        data:
          message: Warning. Something is Wrong whit Auroras Discs 2
          data:
            type: tts
          target: '{{ states(''input_text.echo_sensor'') }}'
      - service: notify.mobile_app_nicos_iphone
        data:
          message: Warning. Something is Wrong whit Auroras Discs 2
          title: '- WARNING -'
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.yellow_alert
    - conditions:
      - condition: trigger
        id: Disk 2
      sequence:
      - service: notify.mobile_app_nicos_iphone
        data:
          message: Warning. Something is Wrong whit Auroras Discs 2
          title: '- WARNING -'
    - conditions:
      - condition: trigger
        id: Disk 3
      - condition: state
        entity_id: person.nico
        state: home
      sequence:
      - service: notify.alexa_media
        data:
          message: Warning. Something is Wrong whit Auroras Discs 3
          data:
            type: tts
          target: '{{ states(''input_text.echo_sensor'') }}'
      - service: notify.mobile_app_nicos_iphone
        data:
          message: Warning. Something is Wrong whit Auroras Discs 3
          title: '- WARNING -'
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.yellow_alert
    - conditions:
      - condition: trigger
        id: Disk 3
      sequence:
      - service: notify.mobile_app_nicos_iphone
        data:
          message: Warning. Something is Wrong whit Auroras Discs 3
          title: '- WARNING -'
    - conditions:
      - condition: trigger
        id: Disk 4
      - condition: state
        entity_id: person.nico
        state: home
      sequence:
      - service: notify.alexa_media
        data:
          message: Warning. Something is Wrong whit Auroras Discs 4
          data:
            type: tts
          target: '{{ states(''input_text.echo_sensor'') }}'
      - service: notify.mobile_app_nicos_iphone
        data:
          message: Warning. Something is Wrong whit Auroras Discs 1
          title: '- WARNING -'
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.yellow_alert
    - conditions:
      - condition: trigger
        id: Disk 4
      sequence:
      - service: notify.mobile_app_nicos_iphone
        data:
          message: Warning. Something is Wrong whit Auroras Discs 4
          title: '- WARNING -'
    - conditions:
      - condition: trigger
        id: Unit
      - condition: state
        entity_id: person.nico
        state: home
      sequence:
      - service: notify.alexa_media
        data:
          message: Warning. Something is Wrong whit Auroras Disk Unit
          data:
            type: tts
          target: '{{ states(''input_text.echo_sensor'') }}'
      - service: notify.mobile_app_nicos_iphone
        data:
          message: Warning. Something is Wrong whit Auroras Discs 1
          title: '- WARNING -'
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.yellow_alert
    - conditions:
      - condition: trigger
        id: Unit
      sequence:
      - service: notify.mobile_app_nicos_iphone
        data:
          message: Warning. Something is Wrong whit Auroras Discs Unit
          title: '- WARNING -'
    default: []
  mode: single
- id: '1641318036171'
  alias: Dressing room On 1h
  description: Alexa asks me when dressing room have been on for 1h
  trigger:
  - platform: state
    to: 'on'
    for:
      hours: 1
      minutes: 0
      seconds: 10
    entity_id: light.dressing_room_l
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: group.peoples
        state: 'on'
      sequence:
      - service: script.activate_alexa_actionable_notification
        data:
          text: "{{ [\n  \"The Dressing room is still On! Do you whant me to turne\
            \ it OFF?\",\n  \"Have you forgoten about the Dressing room? Should I\
            \ turne it OFF?\",\n  \"Hey, the Dressing room is on! Do you whant me\
            \ to kill the lights?\",\n  \"Ahh, onece again you forgotten about the\
            \ Dressing Room. Kill the lights?\",\n] | random }}\n"
          event_id: actionable_notification_turne_off_dressing_room
          alexa_device: '{{ states(''input_text.echo_sensor'') }}'
    default: []
  mode: single
- id: '1641318193018'
  alias: Bathroom On1h Response (Yes)
  description: ''
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_turne_off_bathroom
      event_response_type: ResponseYes
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      area_id: bathroom
  mode: single
- id: '1641325185524'
  alias: Trespass Studio (Trigger)
  description: Motion sensor
  trigger:
  - type: motion
    platform: device
    device_id: dbb2c88ea00d763c28939dd6d72df512
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_809f8e07_ias_zone
    domain: binary_sensor
    id: Motion on
  - type: opened
    platform: device
    device_id: 9798568b747ee0435b2a4af61c860b68
    entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_f52d9007_on_off
    domain: binary_sensor
    id: Studio Porch
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Studio Porch
      - condition: state
        entity_id: input_boolean.lockdown
        state: 'on'
      sequence:
      - service: script.activate_alexa_actionable_notification
        data:
          text: Someone have Opend the PORCH DOOR after hours. Should I turne on the
            Lights?
          event_id: actionable_notification_turne_on_trespass_studio
          alexa_device: media_player.bedroom_echo_dot
    - conditions:
      - condition: trigger
        id: Motion on
      - condition: state
        entity_id: input_boolean.lockdown
        state: 'on'
      - condition: state
        entity_id: input_boolean.guests_on
        state: 'off'
      - condition: state
        entity_id: input_boolean.night_time_on
        state: 'on'
      sequence:
      - service: script.activate_alexa_actionable_notification
        data:
          text: Someone is in the STUDIO after hours. Should I turne on the Lights?
          event_id: actionable_notification_turne_on_trespass_studio
          alexa_device: '{{ states(''sensor.last_alexa'') }}'
    default: []
  mode: single
- id: '1641325286793'
  alias: Trespass Studio Yes Response
  description: Yes fore light On in studion
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_turne_on_trespass_studio
      event_response_type: ResponseYes
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.trespassing
    data: {}
  - service: notify.alexa_media_studio_echo_dot
    data:
      message: YOU ARE TRESPASSING....YOU ARE BEING RECORDED...AUTHORITY HAS BEEN
        NOTIFIED...YOU ARE TRESPASSING....YOU ARE BEING RECORDED...AUTHORITY HAS BEEN
        NOTIFIED
      data:
        type: tts
  mode: single
- id: '1641386474945'
  alias: Bathroom On 1h (Trigger)
  description: Alexa asks me when bathroom have been on for 1h
  trigger:
  - platform: state
    from: 'off'
    to: 'on'
    for:
      hours: 1
      minutes: 0
      seconds: 10
    entity_id: switch.bathroom_switch
  condition:
  - condition: state
    entity_id: switch.bathroom_switch
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: group.peoples
        state: 'on'
      sequence:
      - service: script.activate_alexa_actionable_notification
        data:
          text: The Bathroom is still On! Do you whant me to turne it OFF?
          event_id: actionable_notification_turne_off_bathroom
          alexa_device: '{{ states(''input_text.echo_sensor'') }}'
      - service: input_text.set_value
        data:
          value: Bathroom Motion
        target:
          entity_id: input_text.motion_sensor
    default:
    - service: switch.turn_off
      target:
        area_id: bathroom
      data: {}
  mode: queued
  max: 4
- id: '1641386869240'
  alias: Dressing Room On1h Response (yes)
  description: When I answer Yes to kill the light in dressing room
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_turne_off_dressing_room
      event_response_type: ResponseYes
  condition: []
  action:
  - service: light.turn_off
    target:
      area_id: dressing_room
    data: {}
  mode: single
- id: '1641387456285'
  alias: Bathroom On1h Response (No)
  description: ''
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_turne_off_bathroom
      event_response_type: ResponseNo
  condition:
  - condition: state
    state: 'on'
    entity_id: switch.bathroom_switch
  action:
  - service: notify.alexa_media_last_called
    data:
      message: 'You know best sir.  I will check back in one hour. '
      data:
        type: tts
  - delay:
      hours: 1
      minutes: 0
      seconds: 20
      milliseconds: 0
  - service: automation.trigger
    data:
      skip_condition: false
    target:
      entity_id: automation.bathroom_on1
  mode: single
- id: '1641468587224'
  alias: Bedtime Protocol Guest
  description: ''
  trigger: []
  condition:
  - condition: state
    entity_id: person.nico
    state: home
  action:
  - service: script.activate_alexa_actionable_notification
    data:
      text: "{{ [\n  \"Are youre guest sleeping down stairs?\",\n  \"Are youre guest\
        \ sleeping in the Studio?\",\n  \"Are youre guest sleeping in the denn?\"\
        ,\n] | random }} \n"
      event_id: actionable_notification_bedtime_protocol_guests
      alexa_device: '{{ states(''sensor.last_alexa'') }}'
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.night_time_on
    data: {}
  mode: single
- id: '1641470054960'
  alias: Bedtime Protocol Guest (yes)
  description: ''
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_bedtime_protocol_guests
      event_response_type: ResponseYes
  condition:
  - condition: state
    entity_id: person.nico
    state: home
  action:
  - service: switch.turn_off
    target:
      device_id:
      - e3facd5d8fd383fcfb13d8bccf8c16f1
      - 132d2868985d100d661703876150fa5d
      - ee614bba0d2baf0eb7d62cfdf6b529ff
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 20
      milliseconds: 0
  - service: notify.alexa_media
    data:
      message: Lights Out in 10 seconds... Good night!!
      title: All Echos
      data:
        type: announce
        method: all
      target:
      - media_player.echo_show
      - media_player.bedroom_echo_dot
      - media_player.studio_echo_dot
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: light.turn_off
    target:
      area_id:
      - dressing_room
      - sovrum
      - kok
      - hallway
    data:
      transition: 2
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - service: switch.turn_on
    target:
      device_id: 464bdaf9500de9450e22e49124f4a574
    data: {}
  - service: light.turn_on
    target:
      device_id: 12303500e4551d2ce8cc529e6ad0128c
    data:
      kelvin: 2000
      brightness_pct: 30
      transition: 2
  - service: light.turn_on
    target:
      device_id: 8677ad30abbb2a9789a6612879852daf
    data:
      color_name: cyan
      brightness_pct: 30
      transition: 2
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.night_time_on
  mode: single
- id: '1641644521186'
  alias: Bedtime Protocol Guest (no)
  description: ''
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_bedtime_protocol_guests
      event_response_type: ResponseNo
  condition:
  - condition: state
    entity_id: person.nico
    state: home
  action:
  - service: notify.alexa_media_last_called
    data:
      message: "{{ [\n  \"Ok! Leaving some lights On...\",\n  \"OK!.. Some light will\
        \ be left On...\",\n  \"Roger that!... I will keep some lights On then...\"\
        ,\n  \"No worries!.. Some lights will stay On then...\",\n] | random +[\n\n\
        \  \"Lights Out in 30 seconds   Good night\",\n  \"Shutting down main lights\
        \ in 30 seconds... Good night\",\n  \"Killing lights in 30 seconds... Good\
        \ night\",\n] | random }}\n"
      data:
        type: tts
  - service: switch.turn_off
    target:
      device_id:
      - e3facd5d8fd383fcfb13d8bccf8c16f1
      - 132d2868985d100d661703876150fa5d
      - ee614bba0d2baf0eb7d62cfdf6b529ff
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: light.turn_off
    target:
      area_id:
      - sovrum
      - kok
      - studio
      - hallway
      - dressing_room
    data:
      transition: 2
  - delay:
      hours: 0
      minutes: 0
      seconds: 15
      milliseconds: 0
  - service: switch.turn_off
    target:
      device_id: 464bdaf9500de9450e22e49124f4a574
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - service: light.turn_on
    data:
      color_name: skyblue
      brightness_pct: 20
    target:
      device_id:
      - 8677ad30abbb2a9789a6612879852daf
      - deee17c3c4ddd3b1756bc63f807c318d
  mode: single
- id: '1641651221465'
  alias: Kitchen Motion OnOff
  description: When movement have STARTED sensor and Stopped
  trigger:
  - type: motion
    platform: device
    device_id: af9e13694d8eecfea2628032066d275e
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_ias_zone
    domain: binary_sensor
    id: Motion On
  - type: no_motion
    platform: device
    device_id: af9e13694d8eecfea2628032066d275e
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_ias_zone
    domain: binary_sensor
    id: Motion Off
    for:
      hours: 0
      minutes: 2
      seconds: 0
  - type: not_occupied
    platform: device
    device_id: af9e13694d8eecfea2628032066d275e
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_occupancy
    domain: binary_sensor
    id: Occupancy Off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Motion On
      sequence:
      - service: script.kitchen_kocking
        data: {}
      - service: input_text.set_value
        data:
          value: Kitchen Motion
        target:
          entity_id: input_text.motion_sensor
      - service: input_text.set_value
        data:
          value: media_player.echo_show
        target:
          entity_id: input_text.echo_sensor
    - conditions:
      - condition: trigger
        id: Motion Off
      sequence:
      - service: script.kitchen_cocking_off
        data: {}
    - conditions:
      - condition: trigger
        id: Occupancy Off
      sequence:
      - service: script.kitchen_cocking_off
        data: {}
    default: []
  mode: restart
- id: '1641651652623'
  alias: Kitchen Motion Off
  description: When movement have STOPED in kitchen. Sensor
  trigger:
  - type: no_motion
    platform: device
    device_id: af9e13694d8eecfea2628032066d275e
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_ias_zone
    domain: binary_sensor
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: Motion Off
  - type: not_occupied
    platform: device
    device_id: af9e13694d8eecfea2628032066d275e
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_occupancy
    domain: binary_sensor
    id: Occup Off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Motion Off
      sequence:
      - service: script.kitchen_cocking_off
        data: {}
    - conditions:
      - condition: trigger
        id: Occup Off
      sequence:
      - service: script.kitchen_cocking_off
        data: {}
    default: []
  mode: restart
- id: '1641744186418'
  alias: Bathroom Motion Off
  description: ''
  trigger:
  - type: no_motion
    platform: device
    device_id: e8924ea345f30778d668ced1d581a562
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_6a159007_ias_zone
    domain: binary_sensor
    id: Motion Off
    for:
      hours: 0
      minutes: 7
      seconds: 0
  - type: not_occupied
    platform: device
    device_id: e8924ea345f30778d668ced1d581a562
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_6a159007_occupancy
    domain: binary_sensor
    id: Occup Off
    for:
      hours: 0
      minutes: 2
      seconds: 0
  - platform: state
    entity_id: light.lumi_lumi_switch_l2aeu1_on_off
    from: 'off'
    to: 'on'
    id: Shower On
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Motion Off
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.lumi_lumi_switch_l2aeu1_on_off_2
    - conditions:
      - condition: trigger
        id: Occup Off
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.lumi_lumi_switch_l2aeu1_on_off_2
    - conditions:
      - condition: trigger
        id: Shower On
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.lumi_lumi_switch_l2aeu1_on_off
          - light.lumi_lumi_switch_l2aeu1_on_off_2
    default: []
  mode: restart
- id: '1641744519758'
  alias: Bathroom Motion On
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: e8924ea345f30778d668ced1d581a562
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_6a159007_ias_zone
    domain: binary_sensor
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - service: light.turn_on
    data:
      brightness: 255
    target:
      entity_id: light.lumi_lumi_switch_l2aeu1_on_off_2
  - service: input_text.set_value
    data:
      value: Bathroom Motion
    target:
      entity_id:
      - input_text.motion_sensor
  - service: input_text.set_value
    data:
      value: media_player.echo_show
    target:
      entity_id: input_text.echo_sensor
  mode: restart
- id: '1641747252605'
  alias: FIRE Warning (Not Home)
  description: Warning for Fire in apartment
  trigger:
  - type: smoke
    platform: device
    device_id: eb06111e9a550d63d8d937fd09eec112
    entity_id: binary_sensor.smoke_alarm
    domain: binary_sensor
    id: Hallway Smoke
  - type: smoke
    platform: device
    device_id: 50f240ccc6b567e18d1c9a1bc1282b4f
    entity_id: binary_sensor.smoke_alarm_2
    domain: binary_sensor
    id: Studio Smoke
  - platform: state
    entity_id: sensor.smoke_alarm_battery_state
    id: Hallway Battery
    from: high
  - platform: state
    entity_id: sensor.smoke_alarm_2_battery_state
    id: Studio Battery
    from: high
  - type: no_smoke
    platform: device
    device_id: eb06111e9a550d63d8d937fd09eec112
    entity_id: binary_sensor.smoke_alarm
    domain: binary_sensor
    id: Hallway  Safe
  - type: no_smoke
    platform: device
    device_id: 50f240ccc6b567e18d1c9a1bc1282b4f
    entity_id: binary_sensor.smoke_alarm_2
    domain: binary_sensor
    id: Studio Safe
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Hallway Smoke
      sequence:
      - service: notify.alexa_media
        data:
          message: WARNING!  SMOKE IN HALLWAY!     I HAVE DETECTED SMOKE IN THE HALLWAY!!
          title: Warning
          data:
            type: announce
            method: all
          target:
          - media_player.echo_show
          - media_player.bedroom_echo_dot
          - media_player.studio_echo_dot
      - service: notify.mobile_app_nicos_iphone
        data:
          message: WARNING!  SMOKE IN HALLWAY!     I HAVE DETECTED SMOKE IN THE HALLWAY!!
          title: '- WARNING - '
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.yellow_alert
        data: {}
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.red_alert
        data: {}
      - service: input_text.set_value
        data:
          value: WARNING!  SMOKE IN HALLWAY!
        target:
          entity_id: input_text.info_text
    - conditions:
      - condition: trigger
        id: Studio Smoke
      sequence:
      - service: notify.alexa_media
        data:
          message: WARNING!  SMOKE IN STUDIO!     I HAVE DETECTED SMOKE IN THE STUDIO!!
          title: Warning
          data:
            type: announce
            method: all
          target:
          - media_player.echo_show
          - media_player.bedroom_echo_dot
          - media_player.studio_echo_dot
      - service: notify.mobile_app_nicos_iphone
        data:
          message: WARNING!  SMOKE IN THE STUDIO!     I HAVE DETECTED SMOKE IN THE
            STUDIO!!
          title: '- WARNING -'
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.yellow_alert
        data: {}
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.red_alert
        data: {}
      - service: input_text.set_value
        data:
          value: WARNING!  SMOKE IN STUDIO!
        target:
          entity_id: input_text.info_text
    - conditions:
      - condition: trigger
        id: Hallway Battery
      sequence:
      - service: notify.alexa_media_last_called
        data:
          message: The Battery level is Low in Smoke Detector....Hallway needs New
            battery's.
          data:
            type: tts
      - service: notify.mobile_app_nicos_iphone
        data:
          message: The Battery level is Low in Smoke Detector....Hallway needs New
            battery's.
          title: '--- Notification ---'
      - service: input_text.set_value
        data:
          value: Low battery in hallway
        target:
          entity_id: input_text.info_text
    - conditions:
      - condition: trigger
        id: Studio Battery
      sequence:
      - service: notify.alexa_media_last_called
        data:
          message: The Battery level is Low in Smoke Detector....Studio needs New
            battery's.
          data:
            type: tts
      - service: notify.mobile_app_nicos_iphone
        data:
          message: The Battery level is Low in Smoke Detector....Studio needs New
            battery's.
          title: '--- Notification ---'
      - service: input_text.set_value
        data:
          value: Low battery in Studio
        target:
          entity_id: input_text.info_text
    - conditions:
      - condition: trigger
        id: Hallway  Safe
      sequence:
      - service: notify.alexa_media
        data:
          message: 'No more smoke is detected in Hallway.... Please check for Damage
            and  Safety issues!!!  '
          title: Notification
          data:
            type: announce
            method: all
          target:
          - media_player.echo_show
          - media_player.bedroom_echo_dot
          - media_player.studio_echo_dot
      - service: notify.mobile_app_nicos_iphone
        data:
          message: 'No more smoke is detected in Hallway.... Please check for Damage
            and  Safety issues!!!  '
          title: '--- Notification ---'
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.red_alert
        data: {}
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.yellow_alert
        data: {}
    - conditions:
      - condition: trigger
        id: Studio Safe
      sequence:
      - service: notify.alexa_media
        data:
          message: 'No more smoke is detected in Studio.... Please check for Damage
            and  Safety issues!!!  '
          title: Notification
          data:
            type: announce
            method: all
          target:
          - media_player.echo_show
          - media_player.bedroom_echo_dot
          - media_player.studio_echo_dot
      - service: notify.mobile_app_nicos_iphone
        data:
          message: 'No more smoke is detected in Studio.... Please check for Damage
            and  Safety issues!!!  '
          title: '--- Notification ---'
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.red_alert
        data: {}
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.yellow_alert
        data: {}
    default: []
  mode: restart
- id: '1642282658264'
  alias: Bedtime Protocol Normal
  description: ''
  trigger: []
  condition:
  - condition: state
    entity_id: person.nico
    state: home
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - condition: time
    after: '19:00'
    before: 07:00
  action:
  - service: script.activate_alexa_actionable_notification
    data:
      text: "{{ [\n  \"Do You whant to engage Sleep Protocol\",\n  \"Is It Time for\
        \ Bed Sir?  Sleep Protocol?\",\n  \"Is It that time!! Sleep Protocol  Sir?\"\
        ,\n  \"Yes It getting late! Sleep Protocol?\",\n  \"Yes It is an other day\
        \ to morrow. Sleep Protocol?\",\n  \"Finaly! Sleep Protocol Sir?\",\n] | random\
        \ }}\n"
      event_id: actionable_notification_bedtime_protocol_normal
      alexa_device: '{{ states(''sensor.last_alexa'') }}'
  mode: single
- id: '1642284356041'
  alias: 'Bedtime Protocol normal (yes) '
  description: ''
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_bedtime_protocol_normal
      event_response_type: ResponseYes
  condition:
  - condition: state
    entity_id: person.nico
    state: home
  action:
  - service: script.sleep_protocol
  mode: single
- id: '1642285410796'
  alias: 'Bedtime Protocol normal (no) '
  description: ''
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_bedtime_protocol_normal
      event_response_type: ResponseNo
  condition:
  - condition: state
    entity_id: person.nico
    state: home
  action:
  - service: notify.alexa_media_last_called
    data:
      message: "{{ [\n  \"What was I thinking. You know best Sir\",\n  \"Ok. It is\
        \ late. Do not stay up to long!\",\n  \"As you wish\",\n  \"If you insist\"\
        ,\n  \"No Problem\",\n  \"OK. It is late. Do not blame me to morrow!\",\n\
        ] | random }}\n"
      data:
        type: tts
  mode: single
- id: '1642332311029'
  alias: Studio Work Light On
  description: ''
  trigger: []
  condition: []
  action:
  - service: script.studio_work_light
    data: {}
  - service: script.activate_alexa_actionable_notification
    data:
      text: "{{ [\n  \"A new projekt or fixing Something?   \",\n  \"Ok. What are\
        \ we Fixing now?   \",\n  \"Time to worke?   \",\n  \"Working on a secret\
        \ project? Sir   \",\n] | random +[\n\n  \"Do You whant to fire up Dressing\
        \ room?\",\n  \"Lights On in the Dressing room as well Sir?\",\n  \"Should\
        \ I turne On the Dressing room lights?\",\n  \"And the Dressing Room I guess?\"\
        ,\n  \"Dressing Room On Sir?\",\n  \"How about the Dressing Room? Should I\
        \ turne it ON?\",\n  \"Are you going to be needing Lights in the Dressing\
        \ room?\",\n] | random }}\n"
      event_id: actionable_notification_studio_work_light
      alexa_device: '{{ states(''input_text.echo_sensor'') }}'
  mode: single
- id: '1642333492537'
  alias: 'Studio Work Light (yes) '
  description: Fire up Dressing room
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_studio_work_light
      event_response_type: ResponseYes
  condition: []
  action:
  - service: script.dressing_room_work_light
  mode: single
- id: '1642333693826'
  alias: Studio Work Light (no)
  description: Do not fire up Dressing room
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_studio_work_light
      event_response_type: ResponseNo
  condition: []
  action:
  - service: notify.alexa_media_last_called
    data:
      message: "{{ [\n  \"What was I thinking.... You know best Sir\",\n  \"As you\
        \ wish...\",\n  \"As you decree, so shall it be...\",\n  \"Done\",\n  \"No\
        \ Problem\",\n  \"You are Right... Nothing to see ther anyway\",\n  \"Next\
        \ time...Maybe..\",\n  \"Roger that...\",\n  \"Affirmative\",\n] | random\
        \ }}\n"
      data:
        type: tts
  mode: single
- id: '1642870578930'
  alias: Trespass Boolean
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.trespassing
    id: trespass on
    to: 'on'
    from: 'off'
  - platform: state
    entity_id: input_boolean.trespassing
    id: trespass off
    to: 'off'
    from: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: trespass on
      sequence:
      - service: script.trespass_light_on
    - conditions:
      - condition: trigger
        id: trespass off
      sequence:
      - service: script.trespass_light_off
    default: []
  mode: single
- id: '1642873197281'
  alias: Kill Switch Boolean On
  description: This starts the Kill switch. Add more Booleans to turn On
  trigger:
  - platform: state
    entity_id: input_boolean.trespassing
    from: 'off'
    to: 'on'
    id: Trespass On
  - platform: state
    entity_id: input_boolean.red_alert
    id: Red Alert On
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.yellow_alert
    id: Yello Alert On
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.kill_switch
  mode: single
- id: '1642874069763'
  alias: Kill Switch Boolean OFF
  description: This Kills Booleans. Add more to kill OFF in Action
  trigger:
  - platform: state
    entity_id: input_boolean.kill_switch
    from: 'on'
    to: 'off'
    id: Kill Switch OFF
  condition: []
  action:
  - service: input_boolean.turn_off
    target:
      entity_id:
      - input_boolean.trespassing
      - input_boolean.red_alert
      - input_boolean.yellow_alert
  mode: single
- id: '1642876813284'
  alias: TRESPASS Upper Flor (Trigger)
  description: The upper apartment ( not bedroom window)
  trigger:
  - type: opened
    platform: device
    device_id: c232231db543277e5c44be8f36146f5c
    entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_on_off
    domain: binary_sensor
    id: Front Door
  - type: opened
    platform: device
    device_id: 4bfde38751be0f9dc224349870afbf4f
    entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_f8ab8906_on_off
    domain: binary_sensor
    id: Kitchen Window
  - platform: device
    device_id: 41df595314aa50c197c90c107249adf4
    domain: lock
    entity_id: lock.danalock_v3_btzbe_7ce043fe_door_lock
    type: unlocked
    id: Front door lock
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Front Door
        - condition: trigger
          id: Kitchen Window
      - condition: state
        entity_id: input_boolean.lockdown
        state: 'on'
      - condition: state
        entity_id: group.peoples
        state: 'on'
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id:
          - input_boolean.trespassing
          - input_boolean.red_alert
      - service: notify.alexa_media_bedroom_echo_dot
        data:
          message: 'WARNING.     Trespassing on Upper floor      WARNING       WARNING.     Trespassing
            on Upper floor      WARNING      '
          data:
            type: tts
    - conditions:
      - condition: trigger
        id: Front door lock
      - condition: state
        entity_id: input_boolean.lockdown
        state: 'on'
      - condition: state
        entity_id: group.peoples
        state: 'on'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: input_boolean.night_time_on
            state: 'on'
          sequence:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id:
              - input_boolean.red_alert
              - input_boolean.trespassing
          - service: notify.alexa_media_bedroom_echo_dot
            data:
              message: 'WARNING.     Front Door Have been Unlocked      WARNING       WARNING.     Possibly
                Trespassing on Upper floor      WARNING      '
              data:
                type: tts
        - conditions:
          - condition: state
            entity_id: input_boolean.night_time_on
            state: 'off'
          sequence:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.yellow_alert
          - service: notify.alexa_media_last_called
            data:
              message: Front Door have been Unlocked. Bevare we are under LOCKDOWN
              data:
                type: tts
        default: []
    default: []
  mode: restart
- id: '1642884959173'
  alias: Red Alert Boolean
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.red_alert
    id: alert on
    to: 'on'
    from: 'off'
  - platform: state
    entity_id: input_boolean.red_alert
    id: cancel
    to: 'off'
    from: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: alert on
      sequence:
      - service: script.red_alert_lights_on
    - conditions:
      - condition: trigger
        id: cancel
      sequence:
      - service: script.alert_lights_off
    default: []
  mode: single
- id: '1642947651059'
  alias: run vacation lights
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '0'
    id: sundown
  - platform: sun
    event: sunrise
    offset: '0'
    id: sunup
  - platform: state
    entity_id: input_boolean.vacation_mode
    id: cancel
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sundown
      - condition: state
        entity_id: input_boolean.vacation_mode
        state: 'on'
      sequence:
      - service: script.turn_on
        target:
          entity_id: script.improved_randomize_vacation_lights
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: sunup
        - condition: trigger
          id: cancel
        - condition: state
          entity_id: script.improved_randomize_vacation_lights
          state: 'on'
      sequence:
      - service: script.turn_off
        target:
          entity_id: script.improved_randomize_vacation_lights
    default: []
  mode: single
- id: '1642959597440'
  alias: Lockdown OFF-on  (trigger)
  description: Alexa asks me to turn Lockdown OFF sensor script ON
  trigger:
  - platform: device
    type: turned_on
    device_id: 9ec6a57bbd013ae665376698cdae877e
    entity_id: light.door_light_2
    domain: light
    id: Lock Off
  - platform: state
    entity_id: input_boolean.lockdown
    from: 'off'
    to: 'on'
    id: Script On
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Lock Off
      - condition: state
        entity_id: binary_sensor.morning
        state: 'on'
      - condition: state
        entity_id: input_boolean.lockdown
        state: 'on'
      - condition: state
        entity_id: group.peoples
        state: 'on'
      sequence:
      - service: script.activate_alexa_actionable_notification
        data:
          text: "{{ [\n  \"Sir...Do you want me to turn LOCKDOWN OFF?... \",\n  \"\
            Should I turn Lockdown Off\",\n  \"Lockdown is still aktive!..Should I\
            \ turn it Off?..\",\n  \"Lockdown Off?..Sir..\",\n  \"Do you want me to\
            \ cansel Lockdown?..\",\n  \"Do you want me to shut Lockdown OFF?..\"\
            ,\n] | random }}\n"
          event_id: actionable_notification_turne_off_lockdown
          alexa_device: '{{ states(''sensor.last_alexa'') }}'
    - conditions:
      - condition: trigger
        id: Script On
      - condition: state
        entity_id: group.peoples
        state: 'on'
      sequence:
      - service: script.sensor_check
        data: {}
    default: []
  mode: single
- id: '1642960624895'
  alias: Lockdown OFF (yes)
  description: ''
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_turne_off_lockdown
      event_response_type: ResponseYes
  condition: []
  action:
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.lockdown
  mode: single
- id: '1642960747790'
  alias: Lockdown OFF (no)
  description: ''
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_turne_off_lockdown
      event_response_type: ResponseNo
    context: {}
  condition: []
  action:
  - service: notify.alexa_media_last_called
    data:
      message: "{{ [\n  \"As you wish...\",\n  \"As you decree, so shall it be...\"\
        ,\n  \"No Problem...\",\n  \"Ok..Tell me when then...\",\n] | random +[\n\n\
        \  \"Lockdown is Still On!\",\n  \"Lockdown is still Armed sir!\",\n  \"Lockdown\
        \ is still Running!\",\n] | random }}\n"
      data:
        type: tts
  mode: single
- id: '1643034778854'
  alias: Yellow Alert Boolean
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.yellow_alert
    id: alert on
    to: 'on'
    from: 'off'
  - platform: state
    entity_id: input_boolean.yellow_alert
    id: cancel
    to: 'off'
    from: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: alert on
      sequence:
      - service: script.yellow_alert_on
    - conditions:
      - condition: trigger
        id: cancel
      sequence:
      - service: script.alert_lights_off
    default: []
  mode: single
- id: '1643039927541'
  alias: Mode Switch
  description: Switching Modes. Only One can rule them al
  trigger:
  - platform: state
    entity_id: binary_sensor.morning
    id: Reset Default
    from: 'off'
    to: 'on'
  - platform: state
    id: Morning mode
    from: 'off'
    to: 'on'
    entity_id: input_boolean.morning_time_on
  - platform: state
    entity_id: input_boolean.day_time_on
    id: Daymode
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.evening_time_on
    id: Evening mode
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.night_time_on
    id: Night Mode
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.movie_time_on
    id: Movie Mode
    from: 'off'
    to: 'on'
  - platform: state
    id: Cinema Mode
    from: 'off'
    to: 'on'
    entity_id: input_boolean.cinema_mode
  - platform: state
    entity_id: input_boolean.no_mode
    id: Default
    from: 'off'
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Reset Default
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.day_time_on
          - input_boolean.evening_time_on
          - input_boolean.movie_time_on
          - input_boolean.night_time_on
          - input_boolean.morning_time_on
          - input_boolean.cinema_mode
        data: {}
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.no_mode
    - conditions:
      - condition: trigger
        id: Morning mode
      - condition: state
        entity_id: binary_sensor.morning
        state: 'on'
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.evening_time_on
          - input_boolean.movie_time_on
          - input_boolean.night_time_on
          - input_boolean.no_mode
          - input_boolean.day_time_on
          - input_boolean.cinema_mode
        data: {}
    - conditions:
      - condition: trigger
        id: Daymode
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.morning
          state: 'on'
        - condition: state
          entity_id: binary_sensor.day
          state: 'on'
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.evening_time_on
          - input_boolean.movie_time_on
          - input_boolean.night_time_on
          - input_boolean.no_mode
          - input_boolean.morning_time_on
          - input_boolean.cinema_mode
        data: {}
    - conditions:
      - condition: trigger
        id: Evening mode
      - condition: time
        after: '18:00'
        before: 02:00
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.day_time_on
          - input_boolean.movie_time_on
          - input_boolean.night_time_on
          - input_boolean.no_mode
          - input_boolean.morning_time_on
          - input_boolean.cinema_mode
        data: {}
    - conditions:
      - condition: trigger
        id: Night Mode
      - condition: time
        after: '22:00'
        before: 05:00
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.day_time_on
          - input_boolean.evening_time_on
          - input_boolean.movie_time_on
          - input_boolean.no_mode
          - input_boolean.morning_time_on
          - input_boolean.cinema_mode
        data: {}
    - conditions:
      - condition: trigger
        id: Movie Mode
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.day_time_on
          - input_boolean.evening_time_on
          - input_boolean.night_time_on
          - input_boolean.no_mode
          - input_boolean.morning_time_on
          - input_boolean.cinema_mode
        data: {}
    - conditions:
      - condition: trigger
        id: Cinema Mode
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.day_time_on
          - input_boolean.evening_time_on
          - input_boolean.night_time_on
          - input_boolean.no_mode
          - input_boolean.morning_time_on
          - input_boolean.movie_time_on
        data: {}
    - conditions:
      - condition: trigger
        id: Default
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.day_time_on
          - input_boolean.evening_time_on
          - input_boolean.movie_time_on
          - input_boolean.night_time_on
          - input_boolean.morning_time_on
          - input_boolean.cinema_mode
        data: {}
    default: []
  mode: restart
- id: '1643047590030'
  alias: Low Battery Warning
  description: Remind me to charge my phone or tablet
  trigger:
  - type: value
    platform: device
    device_id: a5967b805cbf77b6d47379b94d967c32
    entity_id: sensor.nicos_iphone_ha_average_active_pace
    domain: sensor
    below: 10
    id: iphone
  - type: battery_level
    platform: device
    device_id: 00ebfa292d083d9936bebcc49bbefb06
    entity_id: sensor.lenovo_tb_8505x_battery_level
    domain: sensor
    id: tablet
    below: 10
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: iphone
      - condition: state
        entity_id: person.nico
        state: home
      - condition: time
        after: 06:30
        before: '23:30'
      sequence:
      - service: notify.alexa_media
        data:
          message: "{{ [\n  \"Sir!.. Youre phone is getting low on Battery!\",\n \
            \ \"Better charge the phone! It's getting Low\",\n  \"Don't forget to\
            \ charge the phone. It's low!\",\n  \"Youre phone is getting low! Sir\"\
            ,\n  \"Youre phone needs to feed!\",\n  \"Time to charge youre phone.\
            \ Sirri is starving. Sir\",\n] | random }}\n"
          data:
            type: tts
          target: '{{ states(''input_text.echo_sensor'') }}'
    - conditions:
      - condition: trigger
        id: Low battery
      - condition: state
        entity_id: person.nico
        state: ''
      - condition: time
        after: '23:30'
        before: 06:30
      sequence:
      - service: notify.alexa_media_last_called
        data:
          message: "\"<amazon:effect name='whispered'>| {{ [\n  \"Sir! Excuse mee..\
            \ Youre phone is getting low on Battery!\",\n  \"Sir! Excuse mee.. Better\
            \ charge the phone! It's getting Low\",\n  \"Sir! Excuse mee.. Don't forget\
            \ to charge the phone. It's low!\",\n  \"Sir! Excuse mee.. Youre phone\
            \ is getting uncharge!\",\n  \"Sir! Excuse mee.. Youre phone needs to\
            \ feed!\",\n  \"Sir! Excuse mee.. Time to charge youre phone. Sirri is\
            \ starving. Sir\",\n] | random }}</amazon:effect>\""
          data:
            type: tts
            method: speak
    - conditions:
      - condition: trigger
        id: tablet
      - condition: state
        entity_id: person.nico
        state: home
      - condition: time
        after: 06:30
        before: '23:30'
      sequence:
      - service: notify.alexa_media
        data:
          message: "{{ [\n  \"Sir!.. Youre tablet is getting low on Battery!\",\n\
            \  \"Better charge the tablet! It's getting Low\",\n  \"Don't forget to\
            \ charge the tablet. It's low!\",\n  \"Youre tablet is getting low! Sir\"\
            ,\n  \"Youre tablet needs to feed!\",\n  \"Time to charge youre tablet.\
            \ Alexa is starving. Sir\",\n] | random }}\n"
          data:
            type: tts
          target: '{{ states(''input_text.echo_sensor'') }}'
    - conditions:
      - condition: trigger
        id: tablet
      - condition: state
        entity_id: person.nico
        state: ''
      - condition: time
        after: '23:30'
        before: 06:30
      sequence:
      - service: notify.alexa_media_last_called
        data:
          message: "\"<amazon:effect name='whispered'>| {{ [\n  \"Sir! Excuse mee..\
            \ Tablet phone is getting low on Battery!\",\n  \"Sir! Excuse mee.. Better\
            \ charge the Tablet! It's getting Low\",\n  \"Sir! Excuse mee.. Don't\
            \ forget to charge the Tablet. It's low!\",\n  \"Sir! Excuse mee.. Youre\
            \ Tablet is getting uncharge!\",\n  \"Sir! Excuse mee.. Youre Tablet needs\
            \ to feed!\",\n  \"Sir! Excuse mee.. Time to charge youre TAblet. Alexa\
            \ is starving. Sir\",\n] | random }}</amazon:effect>\""
          data:
            type: tts
            method: speak
    default: []
  mode: single
- id: '1643058772257'
  alias: Guest Mode
  description: Puts Guest mode On
  trigger: []
  condition:
  - condition: state
    entity_id: person.nico
    state: home
    for:
      hours: 0
      minutes: 0
      seconds: 0
  action:
  - service: script.activate_alexa_actionable_notification
    data:
      text: "{{ [\n  \"Do You whant to engage Guest Mode?\",\n  \"Guest Mode...Sir?\"\
        ,\n  \"I sugest Guest Mode  Sir?\",\n  \"Are we thinking the same?..Guest\
        \ Mode?..sir\",\n  \"Should I switch to Guest mode?\",\n  \"Guest mode On\
        \ Sir?\",\n] | random }}\n"
      event_id: actionable_notification_guest_mode
      alexa_device: '{{ states(''sensor.last_alexa'') }}'
  mode: single
- id: '1643059113361'
  alias: Guest Mode (yes)
  description: ''
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_guest_mode
      event_response_type: ResponseYes
  condition:
  - condition: state
    entity_id: person.nico
    state: home
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.guests_on
  mode: single
- id: '1643059921926'
  alias: Guest Mode (no)
  description: ''
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_guest_mode
      event_response_type: ResponseNo
  condition:
  - condition: state
    entity_id: person.nico
    state: home
  action:
  - service: notify.alexa_media_last_called
    data:
      message: "{{ [\n  \"What was I thinking. You know best Sir\",\n  \"Ok. An other\
        \ time maybe!\",\n  \"As you wish\",\n  \"If you insist\",\n  \"No Problem\"\
        ,\n  \"OK. Canceling new bed sheets then! \",\n] | random }}\n"
      data:
        type: tts
  mode: single
- id: '1643575336831'
  alias: Dressing room  Test
  description: Alexa asks me when dressing room have been on for 1h
  trigger: []
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: person.nico
        state: home
      sequence:
      - service: script.activate_alexa_actionable_notification
        data:
          text: "{{ [\n  \"The Dressing room is still On! Do you whant me to turne\
            \ it OFF?\",\n  \"Have you forgoten about the Dressing room? Should I\
            \ turne it OFF?\",\n  \"Hey, the Dressing room is on! Do you whant me\
            \ to kill the lights?\",\n  \"Ahh, onece again you forgotten about the\
            \ Dressing Room. Kill the lights?\",\n] | random }}\n"
          event_id: actionable_notification_ResponseNone
          alexa_device: '{{ states(''sensor.last_alexa'') }}'
    default:
    - service: light.turn_off
      target:
        area_id: dressing_room
      data:
        transition: 2
  mode: single
- id: '1643638381810'
  alias: Plex Play
  description: Changes the light when plays and paus
  trigger:
  - platform: device
    device_id: 1c7af4caab386dc1c3773f20ba6e14a0
    domain: media_player
    entity_id: media_player.plex_plex_media_player_nicos_mac_mini
    type: playing
    id: Play
  - platform: device
    device_id: 1c7af4caab386dc1c3773f20ba6e14a0
    domain: media_player
    entity_id: media_player.plex_plex_media_player_nicos_mac_mini
    type: paused
    id: Paus
  - platform: device
    device_id: 1c7af4caab386dc1c3773f20ba6e14a0
    domain: media_player
    entity_id: media_player.plex_plex_media_player_nicos_mac_mini
    type: turned_off
    id: Turn Off
  condition:
  - condition: state
    entity_id: input_boolean.cinema_mode
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Play
      sequence:
      - service: light.turn_on
        data:
          transition: 5
          brightness_pct: 2
        target:
          device_id:
          - 8717c43731149dcc89f02574af3dc73d
      - service: light.turn_on
        data:
          transition: 5
          brightness_pct: 6
        target:
          device_id: 171f66bfb6b63255920788dd2067d2d7
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Paus
        - condition: trigger
          id: Turn Off
      sequence:
      - service: light.turn_on
        data:
          brightness: 30
          transition: 2
        target:
          device_id: 8717c43731149dcc89f02574af3dc73d
      - service: light.turn_on
        data:
          brightness: 75
          transition: 2
        target:
          device_id: 171f66bfb6b63255920788dd2067d2d7
    default: []
  mode: restart
- id: '1643721371676'
  alias: Bedroom Motion OnOff
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 288bd24999f34a229be26ccc3981cbaa
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_439d8e07_ias_zone
    domain: binary_sensor
    id: Motion On
  - type: no_motion
    platform: device
    device_id: 288bd24999f34a229be26ccc3981cbaa
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_439d8e07_ias_zone
    domain: binary_sensor
    id: Motion Off
  - type: not_occupied
    platform: device
    device_id: 288bd24999f34a229be26ccc3981cbaa
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_439d8e07_occupancy
    domain: binary_sensor
    id: Occupancy Off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Motion On
      sequence:
      - service: input_text.set_value
        data:
          value: Bedroom Motion
        target:
          entity_id: input_text.motion_sensor
      - service: input_text.set_value
        data:
          value: media_player.bedroom_echo_dot
    default: []
  mode: restart
- id: '1643721550667'
  alias: Studio Motion Sensor OnOff
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: dbb2c88ea00d763c28939dd6d72df512
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_809f8e07_ias_zone
    domain: binary_sensor
    id: Motion On
  - type: no_motion
    platform: device
    device_id: dbb2c88ea00d763c28939dd6d72df512
    entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_809f8e07_ias_zone
    domain: binary_sensor
    id: Motion Off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Motion On
      sequence:
      - service: input_text.set_value
        data:
          value: Studio Motion
        target:
          entity_id: input_text.motion_sensor
      - service: input_text.set_value
        data:
          value: media_player.studio_echo_dot
        target:
          entity_id: input_text.echo_sensor
    default: []
  mode: restart
- id: '1643733776345'
  alias: Trespass Studio None Response
  description: No Response fore light On in studion
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_turne_on_trespass_studio
      event_response_type: ResponseNone
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.red_alert
  - service: notify.alexa_media_studio_echo_dot
    data:
      message: YOU ARE TRESPASSING....YOU ARE BEING RECORDED...AUTHORITY HAS BEEN
        NOTIFIED...YOU ARE TRESPASSING....YOU ARE BEING RECORDED...AUTHORITY HAS BEEN
        NOTIFIED
      data:
        type: tts
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.trespassing
  - service: notify.alexa_media
    data:
      message: YOU ARE TRESPASSING....YOU ARE BEING RECORDED...AUTHORITY HAS BEEN
        NOTIFIED...YOU ARE TRESPASSING....YOU ARE BEING RECORDED...AUTHORITY HAS BEEN
        NOTIFIED
      title: All Echos
      data:
        type: announce
        method: all
      target:
      - media_player.echo_show
      - media_player.bedroom_echo_dot
      - media_player.studio_echo_dot
  mode: single
- id: '1643803873255'
  alias: Getting dark upper(Trigger)
  description: Right now Only Bedroom
  trigger:
  - type: illuminance
    platform: device
    device_id: 288bd24999f34a229be26ccc3981cbaa
    entity_id: sensor.lumi_lumi_sensor_motion_aq2_439d8e07_illuminance
    domain: sensor
    id: Bedroom
    below: 8
  condition:
  - condition: state
    entity_id: group.peoples
    state: 'on'
  - condition: state
    entity_id: input_boolean.night_time_on
    state: 'off'
  - condition: state
    entity_id: light.bedside_lamp_l
    state: 'off'
  - condition: state
    entity_id: input_boolean.movie_time_on
    state: 'off'
  action:
  - service: script.activate_alexa_actionable_notification
    data:
      text: "{{ [\n  \"Excuse me  sir...\",\n  \"Sorry to disturb you...\",\n  \"\
        Sorry to interfere...\",\n  \"Sir.. Excuse me...\",\n] | random +[\n\n  \"\
        Its getting dark on the upper flor. Should I turne on the Lights?\",\n  \"\
        The upper flor is to dark.. Should I turne on the Lights?\",\n  \"The upper\
        \ flor has passed its dark limit. Should I turne on the Lights?\",\n] | random\
        \ }}\n"
      event_id: actionable_notification_light_modes
      alexa_device: '{{ states(''input_text.echo_sensor'') }}'
  mode: single
- id: '1643809151983'
  alias: Getting dark Studio(Trigger)
  description: ''
  trigger:
  - type: illuminance
    platform: device
    device_id: dbb2c88ea00d763c28939dd6d72df512
    entity_id: sensor.lumi_lumi_sensor_motion_aq2_809f8e07_illuminance
    domain: sensor
    id: Studio
    below: 1
  condition:
  - condition: state
    entity_id: group.peoples
    state: 'on'
  - condition: state
    entity_id: input_boolean.night_time_on
    state: 'off'
  - condition: state
    state: 'off'
    entity_id: light.studio_lights
  action:
  - service: script.activate_alexa_actionable_notification
    data:
      text: "{{ [\n  \"Excuse me  sir...\",\n  \"Sorry to disturb you...\",\n  \"\
        Sorry to interfere...\",\n  \"Sir.. Excuse me...\",\n] | random +[\n\n  \"\
        Its getting dark in the Studio. Should I turne on the Lights?\",\n  \"The\
        \ Studio is to dark.. Should I turne on the Lights?\",\n  \"The Studio has\
        \ passed its dark limit. Should I turne on the Lights?\",\n] | random }}\n"
      event_id: actionable_notification_light_modes
      alexa_device: '{{ states(''input_text.echo_sensor'') }}'
  mode: single
- id: '1643811216489'
  alias: 'Light Mode Response (Yes) '
  description: Responds to turn on Lights
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_light_modes
      event_response_type: ResponseYes
  condition: []
  action:
  - service: script.activate_alexa_actionable_notification
    data:
      text: What light mode do you want?, Morning Lights, Daylights, Evening Lights
        or Guest Lights?..
      event_id: actionable_notification_light_modes_select
      alexa_device: '{{ states(''sensor.last_alexa'') }}'
  mode: single
- id: '1643812449971'
  alias: Light Mode Response (Select)
  description: Responds to turn on Lights
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_light_modes_select
  condition: []
  action:
  - service: input_text.set_value
    data:
      value: '{{ trigger.event.data.event_response }}'
    target:
      entity_id: input_text.alexaevent
  - service: script.{{ trigger.event.data.event_response }}
    data: {}
  mode: single
- id: '1644232152416'
  alias: Washer
  description: Telling me when washing is Don
  trigger:
  - platform: state
    entity_id: sensor.washer_maskin
    id: starts washing
    from: Standby
    to: Washing
    for:
      hours: 0
      minutes: 3
      seconds: 0
  - platform: state
    entity_id: sensor.washer_maskin
    id: Done
    from: Washing
    to: Standby
    for:
      hours: 0
      minutes: 3
      seconds: 0
  - platform: state
    entity_id: sensor.washer_maskin
    id: Forgot
    to: Standby
    for:
      hours: 1
      minutes: 30
      seconds: 0
  - platform: state
    entity_id: sensor.washer_maskin
    id: Wrong
    from: Washing
    to: 'Off'
    for:
      hours: 0
      minutes: 3
      seconds: 0
  - platform: state
    entity_id: sensor.washer_maskin
    id: Unloading
    from: Standby
    to: 'Off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: starts washing
      - condition: state
        entity_id: group.peoples
        state: 'on'
      - condition: state
        entity_id: input_boolean.night_time_on
        state: 'off'
      sequence:
      - service: notify.alexa_media
        data:
          message: "{{ [\n  \"I noted that you started Washing... I will tell you\
            \ when is Done.\",\n  \"Sir... I will notify you when the Washing is Done.\"\
            ,\n  \"Washing I see. I will tell you when its finished.\",\n  \"Dont\
            \ worry. I will tell you when the washing machine is Done\",\n  \"If i\
            \ remember, I will tell you when the washing is Done\",\n  \"Sir.. I will\
            \ try to tell you when Washing machine is Done\",\n] | random }}\n"
          data:
            type: tts
          target: '{{ states(''input_text.echo_sensor'') }}'
      - service: input_text.set_value
        data:
          value: The washing have started.
        target:
          entity_id: input_text.info_text
    - conditions:
      - condition: trigger
        id: Done
      - condition: state
        entity_id: group.peoples
        state: 'on'
      - condition: state
        entity_id: input_boolean.night_time_on
        state: 'off'
      sequence:
      - service: notify.alexa_media
        data:
          message: "{{ [\n  \"excuse me  sir...\",\n  \"Sorry to disturb you...\"\
            ,\n  \"Sorry to interrupt...\",\n  \"Sir.. excuse me...\",\n] | random\
            \ +[\n\n  \"The Washing machine is Done...\",\n  \"It looks like the washing\
            \ machine is Finished\",\n  \"Washing is Done. Hang it up...\",\n] | random\
            \ }}\n"
          data:
            type: tts
          target: '{{ states(''input_text.echo_sensor'') }}'
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.info_light
      - service: input_text.set_value
        data:
          value: The Washing is Done.
        target:
          entity_id: input_text.info_text
    - conditions:
      - condition: trigger
        id: Forgot
      - condition: state
        entity_id: group.peoples
        state: 'on'
      - condition: state
        entity_id: input_boolean.night_time_on
        state: 'off'
      sequence:
      - service: notify.alexa_media
        data:
          message: "{{ [\n  \"excuse me  sir...\",\n  \"Sorry to disturb you...\"\
            ,\n  \"Sorry to interrupt...\",\n  \"Sir.. excuse me...\",\n] | random\
            \ +[\n\n  \"Have you forgoten the Washing machine?..\",\n  \"Youre clothes\
            \ are getting Stinky in the Washer machine\",\n  \"Washing is Done. Hang\
            \ it up... ASPA\",\n] | random }}\n"
          data:
            type: tts
          target: '{{ states(''input_text.echo_sensor'') }}'
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.info_light
      - service: input_text.set_value
        data:
          value: Have you forgotten about the Washing?
        target:
          entity_id: input_text.info_text
    - conditions:
      - condition: trigger
        id: Wrong
      - condition: state
        entity_id: group.peoples
        state: 'on'
      - condition: state
        entity_id: input_boolean.night_time_on
        state: 'off'
      sequence:
      - service: notify.alexa_media
        data:
          message: "{{ [\n  \"excuse me  sir...\",\n  \"Sorry to disturb you...\"\
            ,\n  \"Sorry to interrupt...\",\n  \"Sir.. excuse me...\",\n] | random\
            \ +[\n\n  \"Something is Wrong whit Washing machine.. It did not finihed..\"\
            ,\n] | random }}\n"
          data:
            type: tts
          target: '{{ states(''input_text.echo_sensor'') }}'
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.red_alert
      - service: input_text.set_value
        data:
          value: Something is wrong with the Washer.
        target:
          entity_id: input_text.info_text
    - conditions:
      - condition: trigger
        id: Unloading
      - condition: state
        entity_id: group.peoples
        state: 'on'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.info_light
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.washer_completed
    - conditions:
      - condition: trigger
        id: Done
      - condition: state
        entity_id: group.peoples
        state: 'off'
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.washer_completed
      - service: input_text.set_value
        data:
          value: The Washing is Done.
        target:
          entity_id: input_text.info_text
    default: []
  mode: single
- id: '1644309493310'
  alias: Low Battery
  description: ''
  trigger:
  - platform: template
    value_template: "        {% set output = namespace(sensors=[]) %}\n        {%\
      \ for state in states.sensor | selectattr('attributes.device_class', '==', 'battery')\
      \ %}\n          {% if 0 <= state.state | int(-1) < 50 | int  %}\n          \
      \   {% set output.sensors = output.sensors + [state.name ~ ' (' ~ state.state\
      \ ~ ' %)'] %}\n          {% endif %}\n        {% endfor %}\n        {{ output.sensors|join(',\
      \ ')}}"
  condition: []
  action:
  - service: notify.alexa_media_studio_echo_dot
    data:
      message: Pleace '{{ states('sensor.low_battery') }}'
      data:
        type: tts
  mode: single
- id: '1644663280512'
  alias: Info Light Boolean
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.info_light
    from: 'off'
    to: 'on'
    id: Light On
  - platform: state
    entity_id: input_boolean.info_light
    from: 'on'
    to: 'off'
    id: Light Off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Light On
      sequence:
      - service: script.info_light_on
        data: {}
    - conditions:
      - condition: trigger
        id: Light Off
      sequence:
      - service: script.info_light_off
        data: {}
    default: []
  mode: single
- id: '1644860027651'
  alias: Outside Light OnOff
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    id: Sunrice
    offset: '30'
  - platform: sun
    event: sunset
    id: Sunset
    offset: '-30'
  - platform: time
    at: 05:40
    id: '0540'
  - platform: zone
    entity_id: person.nico
    zone: zone.home
    event: enter
    id: Comes Home
  - platform: zone
    entity_id: person.nico
    zone: zone.home
    event: leave
    id: Leaves Home
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Sunrice
      sequence:
      - service: light.turn_off
        data:
          transition: 2
        target:
          device_id: 9e8a3f339cef36ca0ad21e3b225727d1
    - conditions:
      - condition: trigger
        id: Comes Home
      - condition: sun
        after: sunset
        after_offset: '30'
      sequence:
      - service: light.turn_on
        data:
          transition: 2
          brightness_pct: 35
        target:
          device_id: 9e8a3f339cef36ca0ad21e3b225727d1
    - conditions:
      - condition: trigger
        id: '0540'
      - condition: state
        entity_id: person.nico
        state: home
      - condition: time
        weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
      sequence:
      - service: light.turn_on
        data:
          transition: 2
          brightness_pct: 35
        target:
          device_id: 9e8a3f339cef36ca0ad21e3b225727d1
    - conditions:
      - condition: trigger
        id: Leaves Home
      sequence:
      - service: light.turn_off
        data:
          transition: 2
        target:
          device_id: 9e8a3f339cef36ca0ad21e3b225727d1
    default: []
  mode: single
- id: '1644917943294'
  alias: ALARM Trigger
  description: The hole Apartment
  trigger:
  - platform: state
    entity_id: group.motion_sensors_alarm
    id: Motion
    from: 'off'
    to: 'on'
  - type: opened
    platform: device
    device_id: c232231db543277e5c44be8f36146f5c
    entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_on_off
    domain: binary_sensor
    id: Front Door
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id: group.magnet_sensors_alarm
    id: Sensor
    from: 'off'
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Front Door
      - condition: state
        entity_id: alarm_control_panel.ha_alarm
        state: armed_away
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - choose:
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.ha_alarm
            state: disarmed
          sequence:
          - service: notify.alexa_media_echo_show
            data:
              message: The Alarm is Disarmed.  Welcome home.
              data:
                type: tts
          - service: light.turn_off
            data: {}
            target:
              device_id: 8677ad30abbb2a9789a6612879852daf
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.ha_alarm
            state: armed_away
          sequence:
          - service: script.alarm_on
            data: {}
          - service: notify.mobile_app_nicos_iphone
            data:
              message: 'Alarm fired because time or wrong code was applied. '
              title: '- Home Alarm Fired -'
        default: []
    - conditions:
      - condition: trigger
        id: Motion
      - condition: state
        entity_id: alarm_control_panel.ha_alarm
        state: armed_away
      sequence:
      - service: script.alarm_on
        data: {}
      - service: notify.mobile_app_nicos_iphone
        data:
          message: Motion Sensors where triggered
          title: '- Home Alarm Fired -'
    - conditions:
      - condition: trigger
        id: Sensor
      - condition: state
        entity_id: alarm_control_panel.ha_alarm
        state: armed_away
      sequence:
      - service: script.alarm_on
        data: {}
      - service: notify.mobile_app_nicos_iphone
        data:
          message: Kitchen Window or Studio porch has been opened-
          title: '- Home Alarm Fired -'
    default: []
  mode: single
- id: '1644931446489'
  alias: ALARM OFF
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.ha_alarm
    from: armed_away
    to: disarmed
  condition:
  - condition: state
    state: 'on'
    entity_id: input_boolean.red_alert
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.red_alert
  - service: light.turn_off
    data: {}
    target:
      device_id: 8677ad30abbb2a9789a6612879852daf
  - service: notify.mobile_app_nicos_iphone
    data:
      message: The Alarm have been shut off after Fired
      title: '- Home Alarm Fired and STOPPED -'
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: notify.alexa_media
    data:
      message: The Alarm have been Stopped!  Check the apartment for damage or Peoples.
      title: All Echos
      data:
        type: announce
        method: all
      target:
      - media_player.echo_show
      - media_player.bedroom_echo_dot
      - media_player.studio_echo_dot
  mode: single
- id: '1644937618988'
  alias: Alarm Disarm Light
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: c232231db543277e5c44be8f36146f5c
    entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_on_off
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: alarm_control_panel.ha_alarm
    state: armed_away
  action:
  - choose:
    - conditions:
      - type: is_illuminance
        condition: device
        device_id: af9e13694d8eecfea2628032066d275e
        entity_id: sensor.lumi_lumi_sensor_motion_aq2_illuminance
        domain: sensor
        below: 60
      sequence:
      - service: script.door_light_50
        data: {}
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 100
        target:
          device_id: 8677ad30abbb2a9789a6612879852daf
    default:
    - service: light.turn_on
      data:
        color_name: red
        brightness_pct: 100
      target:
        device_id: 8677ad30abbb2a9789a6612879852daf
  mode: single
- id: '1645115813778'
  alias: ALARM Notify (Not Home)
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.ha_alarm
    from: disarmed
    to: armed_away
    id: Armed Away
  - platform: state
    entity_id: alarm_control_panel.ha_alarm
    from: armed_away
    to: disarmed
    id: Disarmed
  condition:
  - condition: state
    entity_id: person.nico
    state: not home
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Armed Away
      sequence:
      - service: notify.mobile_app_nicos_iphone
        data:
          message: The Apartment is Armed Away
          title: '- Home Alarm -'
    - conditions:
      - condition: trigger
        id: Disarmed
      sequence:
      - service: notify.mobile_app_nicos_iphone
        data:
          message: The Apartment is Disarmed
          title: '- Home Alarm'
    default: []
  mode: single
- id: '1645118838990'
  alias: At Work
  description: ''
  trigger:
  - platform: time
    at: 07:10
    id: '0710'
  - platform: time
    at: '22:05'
    id: '2210'
  - platform: sun
    event: sunrise
    offset: '0'
    id: 'Sunrise '
  - platform: sun
    event: sunset
    offset: '0'
    id: sunset
  condition:
  - condition: state
    entity_id: input_boolean.work_mode
    state: 'on'
  - condition: state
    entity_id: group.peoples
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: '0710'
      - condition: sun
        before: sunrise
      sequence:
      - service: light.turn_on
        data: {}
        target:
          device_id:
          - deee17c3c4ddd3b1756bc63f807c318d
          - 8717c43731149dcc89f02574af3dc73d
      - service: switch.turn_on
        data: {}
        target:
          device_id: 464bdaf9500de9450e22e49124f4a574
    - conditions:
      - condition: trigger
        id: 'Sunrise '
      sequence:
      - service: light.turn_off
        data: {}
        target:
          area_id:
          - bathroom
          - sovrum
          - dressing_room
          - hallway
          - kok
          - outside
          - studio
      - service: switch.turn_off
        data: {}
        target:
          device_id: 464bdaf9500de9450e22e49124f4a574
    - conditions:
      - condition: trigger
        id: sunset
      sequence:
      - service: script.evening_lights
        data: {}
      - service: script.studio_light_1
        data: {}
    - conditions:
      - condition: trigger
        id: '2210'
      sequence:
      - service: light.turn_off
        data:
          transition: 3
        target:
          area_id:
          - bathroom
          - sovrum
          - dressing_room
          - hallway
          - kok
          - outside
          - studio
    default: []
  mode: single
- id: '1645284948096'
  alias: Door Lock (Trigger)
  description: When the door have been Unlocked to long
  trigger:
  - platform: device
    device_id: 41df595314aa50c197c90c107249adf4
    domain: lock
    entity_id: lock.danalock_v3_btzbe_7ce043fe_door_lock
    type: locked
    id: Door Locked
  - platform: device
    device_id: 41df595314aa50c197c90c107249adf4
    domain: lock
    entity_id: lock.danalock_v3_btzbe_7ce043fe_door_lock
    type: unlocked
    id: Door Lock unlocked
  - platform: device
    device_id: 41df595314aa50c197c90c107249adf4
    domain: lock
    entity_id: lock.danalock_v3_btzbe_7ce043fe_door_lock
    type: jammed
    id: Jammed
  - type: battery_level
    platform: device
    device_id: 41df595314aa50c197c90c107249adf4
    entity_id: sensor.door_lock_power
    domain: sensor
    below: 20
    id: Low Battery
  - platform: state
    entity_id: lock.danalock_v3_btzbe_7ce043fe_door_lock
    to: unlocked
    for:
      hours: 0
      minutes: 15
      seconds: 15
    id: Forgot
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Jammed
      - type: is_not_open
        condition: device
        device_id: c232231db543277e5c44be8f36146f5c
        entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_on_off
        domain: binary_sensor
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: group.peoples
            state: 'on'
          sequence:
          - service: notify.alexa_media_echo_show
            data:
              message: 'The Front door did not Lock. It can be jammed or not closed
                enough. '
              data:
                type: tts
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.info_light
          - service: input_text.set_value
            data:
              value: 'The Front door did not Lock. It can be jammed or not closed
                enough. '
            target:
              entity_id: input_text.info_text
        default:
        - service: notify.mobile_app_nicos_iphone
          data:
            message: The Front door did not Lock. It can be jammed or not closed enough
            title: '- Front Door Status -'
    - conditions:
      - condition: trigger
        id: Door Locked
      - condition: state
        entity_id: person.nico
        state: not home
      sequence:
      - service: notify.mobile_app_nicos_iphone
        data:
          message: The Front Door is Locked.
          title: '- Front Door Status -'
    - conditions:
      - condition: trigger
        id: Door Lock unlocked
      - condition: state
        entity_id: person.nico
        state: not home
      sequence:
      - service: notify.mobile_app_nicos_iphone
        data:
          message: The Front Door is Unlocked
          title: '- Front Door Status -'
    - conditions:
      - condition: trigger
        id: Forgot
      - condition: state
        entity_id: group.peoples
        state: 'on'
      sequence:
      - service: script.activate_alexa_actionable_notification
        data:
          text: "{{ [\n  \"excuse me  sir...\",\n  \"Sorry to disturb you...\",\n\
            \  \"Sorry to interrupt...\",\n  \"Sir.. excuse me...\",\n] | random +[\n\
            \n  \"The Front door is Unlocked. Do you want me to Lock it?\",\n  \"\
            Front door is Still Unlocked. Should I lock it?\",\n  \"Have you forgoten\
            \ about the front door. Should I lock it?\",\n] | random }}\n"
          event_id: actionable_notification_lock_front_door
          alexa_device: '{{ states(''input_text.echo_sensor'') }}'
    - conditions:
      - condition: trigger
        id: Low Battery
      sequence:
      - service: notify.mobile_app_nicos_iphone
        data:
          message: The Battery is getting Low in Door Lock
          title: '- Front Door Status -'
    default: []
  mode: single
- id: '1645290165243'
  alias: Door Lock Respons
  description: ''
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_lock_front_door
      event_response_type: ResponseYes
    id: 'yes'
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: actionable_notification_lock_front_door
      event_response_type: ResponseNo
    id: 'no'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'yes'
      sequence:
      - service: lock.lock
        data: {}
        target:
          device_id: 41df595314aa50c197c90c107249adf4
    - conditions:
      - condition: trigger
        id: 'no'
      sequence:
      - service: notify.alexa_media_last_called
        data:
          message: "{{ [\n  \"What was I thinking. You know best Sir\",\n  \"Ok. Just\
            \ tell me when to lock it!\",\n  \"As you wish\",\n  \"If you insist\"\
            ,\n  \"No Problem\",\n  \"OK. Do not blame me later!\",\n] | random }}\n"
          data:
            type: tts
    default: []
  mode: single
- id: '1646325138720'
  alias: Door Cam
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.mymotiondetectorrule_cell_motion_detection
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: group.peoples
    state: 'on'
  action:
  - service: camera.play_stream
    data:
      media_player: media_player.echo_show
    target:
      entity_id: camera.tp_link_tapo_c100_mainstream
  mode: single
- id: '1647072778153'
  alias: Door Motion Counter
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 84b6c98a673f596e82aecaf1b5e92e8c
    entity_id: binary_sensor.mymotiondetectorrule_cell_motion_detection
    domain: binary_sensor
    id: Motion trigger
  - platform: time
    at: '23:59:00'
    id: Reset
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Motion trigger
      sequence:
      - service: counter.increment
        data: {}
        target:
          entity_id: counter.door_motion_counter
      - condition: time
        after: 00:00:00
        before: 05:00:00
        weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
        - sun
      - service: counter.increment
        data: {}
        target:
          entity_id: counter.door_motion_counter_night
    default:
    - condition: trigger
      id: Reset
    - service: counter.reset
      data: {}
      target:
        entity_id:
        - counter.door_motion_counter
        - counter.door_motion_counter_night
  mode: single
